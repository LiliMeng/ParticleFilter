function  [new_position] = motion_model_odometry(next_position, initial_position )
 
%   Generate particle samples set with crescent shape distribution.
%   
%   There are 4 parameters to control the variation of the distribution in
%   angular direction (a1, a2) and distance direction (a3, a4).
% INPUTS:
%      - next_position: 1x3 vector, the pose of the particle generated by
%      the ode solver in the next timestep.
%      - initial_position: 1x3 vector, the pose of the starting particle 
%
% OUTPUT:
%      - new_position: 1x3 vector, the new pose of the particle predicted
%      by the distribution.
% 
%  
a1=0.015;
a2=0.015;
a3=0.01;
a4=0.01;

xb=initial_position(1);
yb=initial_position(2);
thb=initial_position(3);

xbp=next_position(1);
ybp=next_position(2);
thbp=next_position(3); 
% 
%  if  ybp-yb<=0
%     dr1= atan2(ybp-yb,xbp-xb)-thb;
%     dt= sqrt((xb-xbp)^2+(yb-ybp)^2);
%     dr2= thbp-thb-dr1;
%     dr1b= dr1-normrnd(0, a1*abs(dr1)+a2*dt);
%     dtb= dt-normrnd(0, a3*dt+a4*(abs(dr1)+abs(dr2)));
%     dr2b= dr2-normrnd(0, a1*abs(dr2)+a2*dt);
%  else dr1 = atan2(ybp-yb,xbp-xb)-thb;
%     
%      deltar1 = -atan2(ybp-yb,xbp-xb)-thb;
%      dt= sqrt((xb-xbp)^2+(yb-ybp)^2);
%      dr2= thbp-thb-dr1;
%      deltar2= thbp-thb-deltar1;
%      dr1b= dr1-normrnd(0, a1*abs(deltar1)+a2*dt);
%      dtb= dt-normrnd(0, a3*dt+a4*(abs(deltar1)+abs(deltar2)));
%      dr2b= dr2-normrnd(0, a1*abs(deltar2)+a2*dt);
% end
dr1= atan2(abs(ybp-yb),abs(xbp-xb))-thb;
dt= sqrt((xb-xbp)^2+(yb-ybp)^2);
dr2= thbp-thb-dr1;
dr1b= dr1-normrnd(0, a1*abs(dr1)+a2*dt);
dtb= dt-normrnd(0, a3*dt+a4*(abs(dr1)+abs(dr2)));
dr2b= dr2-normrnd(0, a1*abs(dr2)+a2*dt); 


 
xp= initial_position(1)+dtb*cos(initial_position(3)+dr1b);
yp= initial_position(2)+dtb*sin(initial_position(3)+dr1b);
thp= initial_position(3)+dr1b+dr2b;
 
new_position = [xp,yp,thp];
 
end
